{"version":3,"sources":["reportWebVitals.ts","components/lobby/_components/join_lobby/index.tsx","components/lobby/_components/create_lobby/index.tsx","components/template/index.tsx","components/lobby/index.tsx","components/lobby/_components/members_list/index.tsx","components/lobby/_components/game_info/index.tsx","components/secrethitler/_components/template/index.tsx","components/secrethitler/_components/usercards/index.tsx","components/secrethitler/_components/host/index.tsx","components/secrethitler/_components/players/index.tsx","App.tsx","index.tsx","components/secrethitler/_components/usercards/usercards.module.scss","components/lobby/_components/join_lobby/join_lobby.module.scss","components/lobby/_components/game_info/game_info.module.scss","components/template/template.module.scss","components/secrethitler/_components/template/template.module.scss","components/lobby/_components/create_lobby/create_lobby.module.scss","components/secrethitler/_components/players/players.module.scss"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","JoinLobby","history","useHistory","useState","gameCode","setGameCode","username","setUserName","handleJoinGame","a","alert","window","fetch","method","headers","body","JSON","stringify","lobby_code","response","ok","json","x","push","user_id","className","styles","join","header_banner","onChange","v","target","value","placeholder","input","title","button","onClick","CreateGameField","cohost","setCohost","checked","handleCreateGame","Template","props","header","mainbody","children","footer","Lobby","ShowMembers","members","me","map","m","id","GameInfo","emptyGameState","game","status","min_players","max_players","maxPlayers","setMaxPlayers","minPlayers","setMinPlayers","gameState","setGameState","setUser_id","useEffect","match","params","game_id","sse","EventSource","onmessage","e","handleSSEEvent","parse","data","onerror","close","event","console","log","Object","keys","includes","code","error","replace","length","full","bg","leaveGame","startGame","UserCard","users","president_id","chancellor_id","setIsPresident","setIsChancellor","showRoles","setShowRoles","cardcontainer","pointer","user","usercard","president","youpres","display_role","SecretHitlerHost","setUsers","r","roles","handleEndGame","b","SecretHitlerPlayer","myRole","setMyRole","showRole","setShowRole","filter","u","isActive","Background","Close","isLarge","Content","roleModal","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d735441f.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState } from \"react\";\nimport { Column, Input, Button, Label } from \"trunx\";\nimport styles from \"./join_lobby.module.scss\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const JoinLobby = () => {\n  const history = useHistory();\n  const [gameCode, setGameCode] = useState<string>(\"\");\n  const [username, setUserName] = useState<string>(\"\");\n\n  const handleJoinGame = async (gameCode: any, username: any) => {\n    if (username === \"\") return alert(\"Username is required\");\n    const response = await window.fetch(\"/api/lobby.join\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=UTF-8\",\n      },\n      body: JSON.stringify({\n        lobby_code: gameCode,\n        username: username,\n      }),\n    });\n    if (response.ok) {\n      const x = await response.json();\n      history.push(`/u/lobby/${gameCode}/${x.user_id}`);\n    } else {\n      alert(\"Invalid game code\");\n    }\n  };\n  return (\n    <Column className={styles.join}>\n      <div className={styles.header_banner}>Join</div>\n      <Column>\n        <Label>Username</Label>\n        <Input\n          onChange={(v) => setUserName(v.target.value)}\n          value={username}\n          placeholder={\"Username\"}\n        />\n        <Label>Game Code</Label>\n        <Input\n          className={styles.input}\n          title=\"Game Code\"\n          placeholder={\"eg: ABCD123\"}\n          onChange={(v) => setGameCode(v.target.value)}\n          value={gameCode}\n        />\n        <Button\n          className={styles.button}\n          onClick={() => handleJoinGame(gameCode, username)}\n        >\n          Join\n        </Button>\n      </Column>\n    </Column>\n  );\n};\n","import { useState } from \"react\";\nimport { Button, Checkbox, Column, Input, Label } from \"trunx\";\nimport styles from \"./create_lobby.module.scss\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const CreateGameField = () => {\n  const [cohost, setCohost] = useState(false);\n  const [gameCode, setGameCode] = useState<string>(\"\");\n  const history = useHistory();\n\n  async function handleCreateGame() {\n    const response = await window.fetch(\"/api/lobby.create\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=UTF-8\",\n      },\n      body: JSON.stringify({}),\n    });\n    if (response.ok) {\n      const x = await response.json();\n      history.push(`/lobby/${x.lobby_code}`);\n    }\n  }\n\n  async function handleJoinGame(gameCode: string) {\n    history.push(`/lobby/${gameCode}`);\n  }\n\n  return (\n    <Column className={styles.join}>\n      <div className={styles.header_banner}>Host</div>\n      <Column>\n        <Checkbox checked={cohost} onChange={() => setCohost(!cohost)}>\n          Join as Co-Host\n        </Checkbox>\n        {cohost ? (\n          <>\n            <Label>Game Code</Label>\n            <Input\n              placeholder={\"eg: ABCD123\"}\n              value={gameCode}\n              onChange={(v) => setGameCode(v.target.value)}\n            />\n          </>\n        ) : null}\n        <br />\n        <Button\n          onClick={() =>\n            cohost ? handleJoinGame(gameCode) : handleCreateGame()\n          }\n        >\n          Host Game\n        </Button>\n      </Column>\n    </Column>\n  );\n  // if (gameState.members.length < gameState?.game?.min_players) return null;\n  // return <Button onClick={() => handleStartGame()}>Start Game</Button>;\n};\n","import { Column, Columns } from \"trunx\";\nimport styles from \"./template.module.scss\";\n\nexport function Template(props: any) {\n  return (\n    <>\n      <Columns className={styles.header}>\n        <Column>The Hive Games</Column>\n      </Columns>\n      <Columns className={styles.mainbody}>{props.children}</Columns>\n      <Columns className={styles.footer}>\n        <Column>©2021 The Hive Games</Column>\n      </Columns>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { JoinLobby } from \"./_components/join_lobby\";\nimport { CreateGameField } from \"./_components/create_lobby\";\nimport { Template } from \"../template\";\n\nexport function Lobby() {\n  return (\n    <Template>\n      <JoinLobby />\n      <CreateGameField />\n    </Template>\n  );\n}\n","import { Content } from \"trunx\";\n\nexport const ShowMembers = ({ members, me }: any) => {\n  return (\n    <Content>\n      <p>Users in Lobby</p>\n      <ul>\n        {members.map((m: any) => {\n          if (m.id == me) {\n            return (\n              <li key={m.id}>\n                <strong>{m.username} - YOU</strong>\n              </li>\n            );\n          }\n          return <li key={m.id}>{m.username}</li>;\n        })}\n      </ul>\n    </Content>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Column, Columns } from \"trunx\";\nimport { Template } from \"../../../template\";\nimport { ShowMembers } from \"../members_list\";\nimport styles from \"./game_info.module.scss\";\n\nexport const GameInfo = (props: any) => {\n  const emptyGameState = {\n    game: { status: \"\", game: \"\", min_players: 10, max_players: 10 },\n    members: [],\n  };\n  const [maxPlayers, setMaxPlayers] = useState(10);\n  const [minPlayers, setMinPlayers] = useState(5);\n  const [gameState, setGameState] =\n    useState<{ game: any; members: string[] }>(emptyGameState);\n  const [gameCode, setGameCode] = useState<string>(\"\");\n  const [user_id, setUser_id] = useState<string>(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    setGameCode(props.match.params.game_id);\n    setUser_id(props.match.params.user_id);\n    if (gameCode) {\n      const sse = new EventSource(`/api/lobby.events?lobby_code=${gameCode}`);\n      sse.onmessage = (e) => handleSSEEvent(JSON.parse(e.data));\n      sse.onerror = () => {\n        // error log here\n        sse.close();\n      };\n\n      return () => {\n        sse.close();\n      };\n    }\n  }, [gameCode]);\n\n  const handleSSEEvent = async (event: {\n    game: {\n      game: string;\n      status: string;\n      min_players: number;\n      max_players: number;\n    };\n    members: string[];\n    code: string;\n    error: string;\n  }) => {\n    if (event?.game?.status === \"in_progress\") {\n      if (user_id) {\n        console.log(\"game in progress\");\n        // Show user play area\n        history.push(`/u/${event?.game.game}/${gameCode}/${user_id}`);\n      } else {\n        // Show host play area\n        history.push(`/${event?.game.game}/${gameCode}`);\n      }\n    }\n    if (Object.keys(event).includes(\"code\")) {\n      console.log(\"error:\", event.code, event.error);\n      setGameState(emptyGameState);\n    } else {\n      setGameState(event);\n      setMaxPlayers(event?.game?.max_players);\n      setMinPlayers(event?.game?.min_players);\n    }\n  };\n\n  async function leaveGame(user_id: string) {\n    const response = await window.fetch(\"/api/lobby.leave\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=UTF-8\",\n      },\n      body: JSON.stringify({\n        user_id: user_id,\n        lobby_code: gameCode,\n      }),\n    });\n    if (response.ok) {\n      history.replace(\"/\");\n    }\n  }\n\n  async function startGame() {\n    const response = await window.fetch(\"/api/game.start\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=UTF-8\",\n      },\n      body: JSON.stringify({\n        lobby_code: gameCode,\n      }),\n    });\n    if (response.ok) {\n      history.replace(`/sh/${gameCode}`);\n    }\n  }\n\n  return (\n    <Template>\n      <Column>\n        <Columns\n          className={\n            maxPlayers <= gameState?.members.length && !user_id\n              ? styles.full\n              : styles.bg\n          }\n        >\n          <Column>\n            <strong>\n              GAME: {gameState.game.game == \"SH\" ? \"Secret Hitler\" : \"\"}\n            </strong>\n            <br />\n            {maxPlayers <= gameState?.members.length && !user_id ? (\n              <p className={styles.gameCode}>LOBBY FULL</p>\n            ) : (\n              <>\n                Game Code: <p className={styles.gameCode}>{gameCode}</p>\n              </>\n            )}\n            {user_id ? (\n              <Button onClick={() => leaveGame(user_id)}>Leave</Button>\n            ) : null}\n            {!user_id && gameState?.members.length >= minPlayers ? (\n              <Button onClick={() => startGame()}>Start</Button>\n            ) : null}\n          </Column>\n        </Columns>\n        <Columns>\n          <Column>\n            <ShowMembers members={gameState?.members} me={user_id} />\n          </Column>\n        </Columns>\n      </Column>\n    </Template>\n  );\n};\n","import { Column, Columns } from \"trunx\";\nimport styles from \"./template.module.scss\";\n\nexport function Template(props: any) {\n  return (\n    <>\n      <Columns className={styles.header}>\n        <Column>Secret Hitler</Column>\n      </Columns>\n      <Columns className={styles.mainbody}>{props.children}</Columns>\n      <Columns className={styles.footer}>\n        <Column>©2021 The Hive Games</Column>\n      </Columns>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Column, Columns, Container } from \"trunx\";\nimport styles from \"./usercards.module.scss\";\nexport function UserCard(props: any): JSX.Element | null {\n  const {\n    users,\n    user_id = null,\n    president_id = null,\n    chancellor_id = null,\n  } = props;\n  const [isPresident, setIsPresident] = useState(false);\n  const [isChancellor, setIsChancellor] = useState(false);\n  const [showRoles, setShowRoles] = useState(false);\n\n  useEffect(() => {\n    if (user_id === president_id) {\n      setIsPresident(true);\n    }\n    if (user_id === chancellor_id) {\n      setIsChancellor(true);\n    }\n  }, [president_id, chancellor_id]);\n\n  if (!users) {\n    return null;\n  }\n  return (\n    <Columns\n      className={`${styles.cardcontainer} ${user_id && styles.pointer}`}\n      onClick={() => setShowRoles(!showRoles)}\n    >\n      {users.map((user: any) => {\n        return (\n          <Column\n            className={`${styles.usercard} ${\n              user.user_id == president_id ? styles.president : \"\"\n            } ${\n              user_id === user.user_id && user.user_id == president_id\n                ? styles.youpres\n                : \"\"\n            } ${user_id && showRoles ? styles[user.display_role] : \"\"}`}\n            key={user.user_id}\n          >\n            {user.username}\n            <br />\n            {user_id === user.user_id ? \"YOU\" : null}\n            <br />\n            {user_id && showRoles ? (\n              user.display_role == \"hitler\" ? (\n                <strong>hitler</strong>\n              ) : null\n            ) : null}\n          </Column>\n        );\n      })}\n    </Columns>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Button, Column, Columns } from \"trunx\";\nimport { Template } from \"../template\";\nimport { UserCard } from \"../usercards\";\n\nexport function SecretHitlerHost(props: any) {\n  const [gameCode, setGameCode] = useState(props.match.params.game_id);\n  const [users, setUsers] = useState(props.match.params.users);\n  const [gameState, setGameState] = useState<any>();\n  const game_id = props.match.params.game_id;\n\n  useEffect(() => {\n    // Get users\n    (async function getUsers(lobby_code: string) {\n      const response = await window.fetch(\"/api/sh.get_users\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json;charset=UTF-8\",\n        },\n        body: JSON.stringify({\n          lobby_code: gameCode,\n        }),\n      });\n      if (response.ok) {\n        const r = await response.json();\n        setUsers(r.roles);\n      }\n    })(gameCode);\n\n    // SSE\n    const sse = new EventSource(`/api/sh.events?lobby_code=${gameCode}`);\n    sse.onmessage = (e) => handleSSEEvent(JSON.parse(e.data));\n    sse.onerror = () => {\n      sse.close();\n    };\n\n    return () => {\n      sse.close();\n    };\n  }, []);\n\n  const handleSSEEvent = (event: any) => {\n    console.log(event);\n    setGameState(event);\n  };\n\n  const handleEndGame = async () => {\n    const response = await window.fetch(\"/api/game.end\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json;charset=UTF-8\",\n      },\n      body: JSON.stringify({\n        lobby_code: gameCode,\n      }),\n    });\n    if (response.ok) {\n      const b: any = await response.json();\n      console.log(b);\n    }\n  };\n\n  return (\n    <Template>\n      <Column>\n        <Columns>\n          <Column>\n            SecretHitlerHost: {game_id}\n            <br />\n            <Button onClick={() => handleEndGame()}>End Game</Button>\n          </Column>\n        </Columns>\n        <UserCard\n          users={users}\n          president_id={gameState?.president_id}\n          chancellor_id={gameState?.chancellor_id}\n        />\n      </Column>\n    </Template>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Box, Button, Column, Columns, Modal } from \"trunx\";\nimport { Template } from \"../template\";\nimport { UserCard } from \"../usercards\";\nimport styles from \"./players.module.scss\";\n\nexport function SecretHitlerPlayer(props: any) {\n  const [gameCode, setGameCode] = useState(props.match.params.game_id);\n  const [users, setUsers] = useState<any>();\n  const [myRole, setMyRole] = useState<any>();\n  const [showRole, setShowRole] = useState<boolean>(false);\n  const [user_id, setUser_id] = useState(props.match.params.user_id);\n  const [gameState, setGameState] = useState<any>();\n  const game_id = props.match.params.game_id;\n\n  useEffect(() => {\n    // Get users\n    (async function getUsers(lobby_code: string) {\n      const response = await window.fetch(\"/api/sh.get_users\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json;charset=UTF-8\",\n        },\n        body: JSON.stringify({\n          lobby_code: gameCode,\n          user_id: user_id,\n        }),\n      });\n      if (response.ok) {\n        const r = await response.json();\n        setUsers(r.roles);\n        setMyRole(\n          r.roles.filter((u: any) => u.user_id === user_id)[0]?.display_role\n        );\n      }\n    })(gameCode);\n\n    // SSE\n    const sse = new EventSource(\n      `/api/sh.events?lobby_code=${gameCode}&user_id=${user_id}`\n    );\n    sse.onmessage = (e) => handleSSEEvent(JSON.parse(e.data));\n    sse.onerror = () => {\n      sse.close();\n    };\n\n    return () => {\n      sse.close();\n    };\n  }, []);\n\n  const handleSSEEvent = (event: any) => {\n    setGameState(event);\n  };\n\n  return (\n    <Template>\n      <Column>\n        <Columns>\n          <Column>\n            SecretHitlerPlayer: {game_id}\n            <br />\n            <Button onClick={() => setShowRole(!showRole)}>Show Role</Button>\n            <Modal isActive={showRole}>\n              <Modal.Background onClick={() => setShowRole(!showRole)} />\n              <Modal.Close onClick={() => setShowRole(!showRole)} isLarge />\n              <Modal.Content className={styles.roleModal}>\n                <Box>{myRole}</Box>\n              </Modal.Content>\n            </Modal>\n          </Column>\n        </Columns>\n        <UserCard\n          users={users}\n          user_id={user_id}\n          president_id={gameState?.president_id}\n          chancellor_id={gameState?.chancellor_id}\n        />\n      </Column>\n    </Template>\n  );\n}\n","import { Lobby } from \"./components/lobby\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { GameInfo } from \"./components/lobby/_components/game_info\";\nimport { SecretHitlerHost } from \"./components/secrethitler/_components/host\";\nimport { SecretHitlerPlayer } from \"./components/secrethitler/_components/players\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Lobby />\n          </Route>\n          <Route path=\"/lobby/:game_id\" component={GameInfo} />\n          <Route path=\"/u/lobby/:game_id/:user_id\" component={GameInfo} />\n          <Route path=\"/sh/:game_id\" component={SecretHitlerHost} />{\" \"}\n          {/* SH host play area */}\n          <Route\n            path=\"/u/sh/:game_id/:user_id\"\n            component={SecretHitlerPlayer}\n          />{\" \"}\n          {/* SH user play area */}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bulma/css/bulma.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usercard\":\"usercards_usercard__7rTtc\",\"cardcontainer\":\"usercards_cardcontainer__3BYRB\",\"president\":\"usercards_president__3gVsz\",\"youpres\":\"usercards_youpres__ZxXCp\",\"presblink\":\"usercards_presblink__3nXq8\",\"pointer\":\"usercards_pointer__MibXw\",\"liberal\":\"usercards_liberal__2hGhT\",\"fascist\":\"usercards_fascist__3nfa-\",\"hitler\":\"usercards_hitler__3NnTN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"join\":\"join_lobby_join__2PI7z\",\"header_banner\":\"join_lobby_header_banner__15___\",\"input\":\"join_lobby_input__3rZtB\",\"button\":\"join_lobby_button__2fuE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"game_info_bg__1TnRo\",\"full\":\"game_info_full__1n2zS\",\"gameCode\":\"game_info_gameCode__Xtcpz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"template_header__3wzHV\",\"mainbody\":\"template_mainbody__xIUPX\",\"footer\":\"template_footer__3noNh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"template_header__3rORQ\",\"mainbody\":\"template_mainbody__z2h0O\",\"footer\":\"template_footer__HtiuG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"join\":\"create_lobby_join__2RdXN\",\"header_banner\":\"create_lobby_header_banner__3H6pZ\",\"input\":\"create_lobby_input__gFxRI\",\"button\":\"create_lobby_button__3K-pz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roleModal\":\"players_roleModal__2TiA3\"};"],"sourceRoot":""}